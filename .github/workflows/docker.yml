name: Publish to Docker Hub
on: workflow_dispatch

env:
  IMAGE_REGISTRY: https://index.docker.io/v1
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    permissions:
      contents: read
      packages: write
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@dc7b9719a96d48369863986a06765841d7ea23f6

      - name: Authenticate Docker
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: mithrilsecuritysas
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # - name: Build and push
      #   run: |
      #     docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/text-generation-inference:latest $GITHUB_WORKSPACE
      #     docker inspect --format='{{.Id}}' ${{ secrets.DOCKER_HUB_USERNAME }}/text-generation-inference:latest | tee id.txt

      # - name: Add image id to release
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     file: id.txt
      #     tag: ${{ github.ref }}
      #     overwrite: true

      # - name: Push
      #   run: |
      #     docker push ${{ secrets.DOCKER_HUB_USERNAME }}/text-generation-inference:latest
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@69f6fc9d46f2f8bf0d5491e4aabe0bb8c6a4678a # v4.0.1
        with:
          images: ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # v3.0.0
        id: build
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Output image
        id: image
        run: |
          # NOTE: Set the image as an output because the `env` context is not
          # available to the inputs of a reusable workflow call.
          image_name="${IMAGE_REGISTRY}/${IMAGE_NAME}"
          echo "image=$image_name" >> "$GITHUB_OUTPUT"
  
  provenance:
    needs: [build]
    permissions:
      actions: read
      id-token: write
      packages: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.4.0
    with:
      image: ${{ needs.build.outputs.image }}
      digest: ${{ needs.build.outputs.digest }}
      registry-username: mithrilsecuritysas
    secrets:
      registry-password: ${{ secrets.DOCKER_HUB_TOKEN }}

          
          
